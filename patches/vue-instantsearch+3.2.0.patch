diff --git a/node_modules/vue-instantsearch/src/components/Configure.js b/node_modules/vue-instantsearch/src/components/Configure.js
index 8c5321e..01ba1c0 100644
--- a/node_modules/vue-instantsearch/src/components/Configure.js
+++ b/node_modules/vue-instantsearch/src/components/Configure.js
@@ -17,7 +17,7 @@ export default {
     },
   },
   render(createElement) {
-    if (!this.state || !this.$scopedSlots.default) {
+    if (!this.state || (!this.$slots.default && !this.$scopedSlots.default)) {
       return null;
     }
 
diff --git a/node_modules/vue-instantsearch/src/components/Highlighter.vue b/node_modules/vue-instantsearch/src/components/Highlighter.vue
index bee0e49..467eb2d 100644
--- a/node_modules/vue-instantsearch/src/components/Highlighter.vue
+++ b/node_modules/vue-instantsearch/src/components/Highlighter.vue
@@ -4,44 +4,48 @@
       v-for="({ value, isHighlighted }, index) in parsedHighlights"
       :class="[isHighlighted && suit('highlighted')]"
       :key="index"
-      :is="isHighlighted ? highlightedTagName : textNode"
+      :is="isHighlighted ? highlightedTagName : TextNode"
     >{{ value }}</component>
   </span>
 </template>
 
 <script>
-import { parseAlgoliaHit } from '../util/parseAlgoliaHit';
+import { parseAlgoliaHit } from "../util/parseAlgoliaHit";
+import * as Vue from "vue";
+
+const TextNode =
+  Vue.version && Vue.version.split(".")[0] === "3"
+    ? (props, context) => context.slots.default()
+    : {
+        functional: true,
+        render(createElement, context) {
+          const slots = context.slots();
+          return slots.default;
+        }
+      };
 
 export default {
-  name: 'AisHighlighter',
+  name: "AisHighlighter",
   props: {
     hit: {
       type: Object,
-      required: true,
+      required: true
     },
     attribute: {
       type: String,
-      required: true,
+      required: true
     },
     highlightedTagName: {
       type: String,
-      default: 'mark',
+      default: "mark"
     },
     suit: { type: Function, required: true },
     highlightProperty: { type: String, required: true },
     preTag: { type: String, required: true },
-    postTag: { type: String, required: true },
+    postTag: { type: String, required: true }
   },
   data() {
-    return {
-      textNode: {
-        functional: true,
-        render(createElement, context) {
-          const slots = context.slots();
-          return slots.default;
-        },
-      },
-    };
+    return { TextNode };
   },
   computed: {
     parsedHighlights() {
@@ -50,9 +54,9 @@ export default {
         hit: this.hit,
         highlightProperty: this.highlightProperty,
         preTag: this.preTag,
-        postTag: this.postTag,
+        postTag: this.postTag
       });
-    },
-  },
+    }
+  }
 };
 </script>
diff --git a/node_modules/vue-instantsearch/src/components/InstantSearch.js b/node_modules/vue-instantsearch/src/components/InstantSearch.js
index e5d54f0..e1e4f3d 100644
--- a/node_modules/vue-instantsearch/src/components/InstantSearch.js
+++ b/node_modules/vue-instantsearch/src/components/InstantSearch.js
@@ -1,6 +1,7 @@
 import instantsearch from 'instantsearch.js/es';
 import { createInstantSearchComponent } from '../util/createInstantSearchComponent';
 import { warn } from '../util/warn';
+import {h} from 'vue'
 
 const oldApiWarning = `Vue InstantSearch: You used the prop api-key or app-id.
 These have been replaced by search-client.
@@ -83,8 +84,8 @@ export default createInstantSearchComponent({
       }),
     };
   },
-  render(createElement) {
-    return createElement(
+  render(localH) {
+    return (h || localH)(
       'div',
       {
         class: {
@@ -92,7 +93,7 @@ export default createInstantSearchComponent({
           [this.suit('', 'ssr')]: false,
         },
       },
-      this.$slots.default
+      typeof this.$slots.default === 'function' ? this.$slots.default() : this.$slots.default
     );
   },
 });
diff --git a/node_modules/vue-instantsearch/src/components/SearchInput.vue b/node_modules/vue-instantsearch/src/components/SearchInput.vue
index 1984697..776833c 100644
--- a/node_modules/vue-instantsearch/src/components/SearchInput.vue
+++ b/node_modules/vue-instantsearch/src/components/SearchInput.vue
@@ -20,10 +20,10 @@
       :placeholder="placeholder"
       :autofocus="autofocus"
       :class="suit('input')"
-      :value="value"
+      :value="value || modelValue"
       @focus="$emit('focus', $event)"
       @blur="$emit('blur', $event)"
-      @input="$emit('input', $event.target.value)"
+      @input="$emit('input', $event.target.value);$emit('update:modelValue', $event.target.value)"
       ref="input"
     >
     <button
@@ -53,7 +53,7 @@
       type="reset"
       :title="resetTitle"
       :class="suit('reset')"
-      :hidden="!value || (showLoadingIndicator && shouldShowLoadingIndicator)"
+      :hidden="(!value && !modelValue) || (showLoadingIndicator && shouldShowLoadingIndicator)"
     >
       <slot name="reset-icon">
         <svg
@@ -153,9 +153,14 @@ export default {
     },
     value: {
       type: String,
-      required: true,
+      required: false,
     },
+    modelValue: {
+      type: String,
+      required: false,
+    }
   },
+  emits: ['input', 'update:modelValue', 'blur', 'focus', 'reset'],
   data() {
     return {
       query: '',
@@ -168,6 +173,7 @@ export default {
     },
     onFormReset() {
       this.$emit('input', '');
+      this.$emit('update:modelValue', '');
       this.$emit('reset');
     },
   },
diff --git a/node_modules/vue-instantsearch/src/mixins/widget.js b/node_modules/vue-instantsearch/src/mixins/widget.js
index 65424fe..9705a9b 100644
--- a/node_modules/vue-instantsearch/src/mixins/widget.js
+++ b/node_modules/vue-instantsearch/src/mixins/widget.js
@@ -27,7 +27,7 @@ export const createWidgetMixin = ({ connector } = {}) => ({
     if (typeof connector === 'function') {
       this.factory = connector(this.updateState, () => {});
       this.widget = this.factory(this.widgetParams);
-      this.getParentIndex().addWidgets([this.widget]);
+      this.getParentIndex()().addWidgets([this.widget]);
 
       if (
         this.instantSearchInstance.__initialSearchResults &&
diff --git a/node_modules/vue-instantsearch/src/util/createInstantSearchComponent.js b/node_modules/vue-instantsearch/src/util/createInstantSearchComponent.js
index 3501d6c..45af2ce 100644
--- a/node_modules/vue-instantsearch/src/util/createInstantSearchComponent.js
+++ b/node_modules/vue-instantsearch/src/util/createInstantSearchComponent.js
@@ -1,7 +1,7 @@
 import { createSuitMixin } from '../mixins/suit';
 import { version } from '../../package.json'; // rollup does pick only what needed from json
 import { _objectSpread } from './polyfills';
-import Vue from 'vue';
+import { version as VueVersion } from 'vue';
 
 export const createInstantSearchComponent = component =>
   _objectSpread(
@@ -38,7 +38,7 @@ export const createInstantSearchComponent = component =>
       created() {
         const searchClient = this.instantSearchInstance.client;
         if (typeof searchClient.addAlgoliaAgent === 'function') {
-          searchClient.addAlgoliaAgent(`Vue (${Vue.version})`);
+          searchClient.addAlgoliaAgent(`Vue (${VueVersion})`);
           searchClient.addAlgoliaAgent(`Vue InstantSearch (${version})`);
         }
       },
